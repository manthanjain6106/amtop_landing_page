version: '3.8'

services:
  amtop-frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=production
      - PAYLOAD_API_URL=${PAYLOAD_API_URL}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
      - NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=${NEXT_PUBLIC_GOOGLE_ANALYTICS_ID}
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - amtop-frontend-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.2-alpine
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - amtop-frontend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
      - ./public:/var/www/html
    depends_on:
      - amtop-frontend
    restart: unless-stopped
    networks:
      - amtop-frontend-network

  monitoring:
    image: prom/prometheus:latest
    ports:
      - '9091:9090'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - amtop-frontend-network

volumes:
  redis_data:
  prometheus_data:

networks:
  amtop-frontend-network:
    driver: bridge
